#version: "3"
services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    # line above must be uncommented to allow external containers to connect.
    # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/connect-a-container-to-gluetun.md#external-container-to-gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 8085:8085 # qbittorrent - torrenter
      - 8989:8989 # Sonarr - tv 
      - 7878:7878 # radarr - movie
      - 9696:9696 # Prowlarr - torrent indexer
      - 8686:8686 # lidarr - music
      - 8787:8787 # readarr - books
      - 6767:6767 # bazarr - subtitles
      - 8191:8191 # flaresolverr - captcha bypass
    restart: always
    volumes:
      - /ms4/config/gluetun:/gluetun
      - /ms4/tools:/tools
    environment:
      # See https://github.com/qdm12/gluetun-wiki/tree/main/setup#setup
      - VPN_SERVICE_PROVIDER=nordvpn
      - VPN_TYPE=wireguard
      # OpenVPN:
      # - OPENVPN_USER=
      # - OPENVPN_PASSWORD=
      # Wireguard:
      - WIREGUARD_PRIVATE_KEY=
 # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/providers/nordvpn.md#obtain-your-wireguard-private-key
      - WIREGUARD_ADDRESSES=10.5.0.2/32
      # Timezone for accurate log times
      - TZ=Australia/Sydney
      # Server list updater
      # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
      - UPDATER_PERIOD=24h
      - SERVER_COUNTRIES=australia  
      # Comma separated list of countries
      - SERVER_REGIONS= 
      # Comma separated list of regions
      - SERVER_CITIES= 
      # Comma separated list of server cities
      - SERVER_HOSTNAMES= 
      # Comma separated list of server hostnames
      - SERVER_CATEGORIES= 
      # Comma separated list of server categories
      - DOT_PROVIDERS= 
      # Comma delimited list of DNS over TLS providers, `cloudflare`, `google`, `quad9`, `quadrant`, `cleanbrowsing`
      - DNS_ADDRESS=103.86.96.100 # 103.86.99.100, provided here are both nordvpn dns adresses, enter a single ip adress for custom dns 

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    network_mode: "service:gluetun"
    environment:
      - PUID=13007
      - PGID=13000
      - TZ=Australia/Sydney
      - UMASK=002
      - WEBUI_PORT=8085
    volumes:
      - /ms4/config/qbittorrent/config:/config
      - /ms4/data/torrent:/torrent
      - /ms4/tools:/tools
    depends_on:
      - gluetun
    restart: always

  sonarr:
#    image: lscr.io/linuxserver/sonarr:latest # alternative mirror
    image: ghcr.io/hotio/sonarr:latest
    container_name: sonarr
    network_mode: "service:gluetun"
    environment:
      - PUID=13001
      - PGID=13000
      - UMASK=002
      - TZ=Australia/Sydney
    volumes:
      - /ms4/config/sonarr/config:/config
      - /ms4/data/:/data 
      - /ms4/tools:/tools
    restart: always

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: "service:gluetun"
    environment:
      - PUID=13002
      - PGID=13000
      - UMASK=002
      - TZ=Australia/Sydney
    volumes:
      - /ms4/config/radarr/config:/config
      - /ms4/data/:/data 
      - /ms4/tools:/tools
    restart: always

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    network_mode: "service:gluetun"
    environment:
      - PUID=13003
      - PGID=13000
      - UMASK=002
      - TZ=Australia/Sydney
    volumes:
      - /ms4/config/lidarr/config:/config
      - /ms4/data:/data 
      - /ms4/tools:/tools
    restart: always

  readarr:
#    image: lscr.io/linuxserver/readarr:develop #alternative mirror
    image: ghcr.io/hotio/readarr:latest
    container_name: readarr
    network_mode: "service:gluetun"
    environment:
      - PUID=13004
      - PGID=13000
      - UMASK=002
      - TZ=Australia/Sydney
    volumes:
      - /ms4/config/readarr/config:/config
      - /ms4/data:/data 
      - /ms4/tools:/tools
    restart: always

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    network_mode: "service:gluetun"
    environment:
      - PUID=13013
      - PGID=13000
      - UMASK=002
      - TZ=Australia/Sydney
    volumes:
      - /ms4/config/bazarr/config:/config
      - /ms4/data/:/data 
      - /ms4/tools:/tools
    restart: always
    
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    network_mode: "service:gluetun"
    environment:
      - PUID=13006
      - PGID=13000
      - UMASK=002
      - TZ=Australia/Sydney
    volumes:
      - /ms4/config/prowlarr/config:/config
      - /ms4/tools:/tools
    restart: always
    
  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    network_mode: "service:gluetun"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Australia/Sydney
    volumes:
      - /ms4/tools:/tools
    restart: always

  cloudflared: 
    image: cloudflare/cloudflared 
    container_name: cloudflared
    restart: always
    command: tunnel run 
    environment: 
      - TUNNEL_TOKEN=


  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=13010
      - PGID=13000
      - UMASK=002
      - TZ=Australia/Sydney
     # - JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
    volumes:
      - /ms4/config/jellyfin/config:/config
      - /ms4/config/jellyfin/cache:/cache
      - /ms4/data/media/tv:/data/tvshows
      - /ms4/data/media/movies:/data/movies
      - /ms4/data/media/books:/data/books
      - /ms4/data/media/music:/data/music
      - /ms4/tools:/tools
    ports:
      - 8096:8096
    #  - 8920:8920 #optional
    #  - 7359:7359/udp #optional
    #  - 1900:1900/udp #optional
    restart: always

  jellyseerr:
       image: fallenbagel/jellyseerr:latest
       container_name: jellyseerr
       environment:
            - LOG_LEVEL=debug
            - TZ=Australia/Sydney
            - PUID=13012
            - PGID=13000
            - UMASK=002
       ports:
            - 5055:5055
       volumes:
            - /ms4/config/jellyseerr/config:/app/config
            - /ms4/tools:/tools
       restart: always

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "83:80/tcp"
    environment:
      TZ: 'Australia/Sydney'
      WEBPASSWORD: 'testtest' #change this for gods sake
    # Volumes store your data between container upgrades
    volumes:
      - '/ms4/config/pihole/config:/etc/pihole'
      - '/ms4/config/pihole/dns:/etc/dnsmasq.d'
      - /ms4/tools:/tools
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: always


  npm:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: always
    container_name: npm
    ports:
      # These ports are in format <host-port>:<container-port>
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
      # Add any other Stream port you want to expose
      # - '21:21' # FTP

    # Uncomment the next line if you uncomment anything in the section
    # environment:
      # Uncomment this if you want to change the location of
      # the SQLite DB file within the container
      # DB_SQLITE_FILE: "/data/database.sqlite"

      # Uncomment this if IPv6 is not enabled on your host
      # DISABLE_IPV6: 'true'

    volumes:
      - /ms4/config/npm/data:/data
      - /ms4/config/npm/letsencrypt:/etc/letsencrypt
      - /ms4/tools:/tools

      
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#    command: --interval 30
